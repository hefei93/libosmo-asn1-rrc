/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_MeasuredResults_H_
#define	_MeasuredResults_H_


#include <asn_application.h>

/* Including external dependencies */
#include "IntraFreqMeasuredResultsList.h"
#include "InterFreqMeasuredResultsList.h"
#include "InterRATMeasuredResultsList.h"
#include "TrafficVolumeMeasuredResultsList.h"
#include "QualityMeasuredResults.h"
#include "UE-InternalMeasuredResults.h"
#include "UE-Positioning-MeasuredResults.h"
#include <NULL.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasuredResults_PR {
	MeasuredResults_PR_NOTHING,	/* No components present */
	MeasuredResults_PR_intraFreqMeasuredResultsList,
	MeasuredResults_PR_interFreqMeasuredResultsList,
	MeasuredResults_PR_interRATMeasuredResultsList,
	MeasuredResults_PR_trafficVolumeMeasuredResultsList,
	MeasuredResults_PR_qualityMeasuredResults,
	MeasuredResults_PR_ue_InternalMeasuredResults,
	MeasuredResults_PR_ue_positioning_MeasuredResults,
	MeasuredResults_PR_spare
} MeasuredResults_PR;

/* MeasuredResults */
typedef struct MeasuredResults {
	MeasuredResults_PR present;
	union MeasuredResults_u {
		IntraFreqMeasuredResultsList_t	 intraFreqMeasuredResultsList;
		InterFreqMeasuredResultsList_t	 interFreqMeasuredResultsList;
		InterRATMeasuredResultsList_t	 interRATMeasuredResultsList;
		TrafficVolumeMeasuredResultsList_t	 trafficVolumeMeasuredResultsList;
		QualityMeasuredResults_t	 qualityMeasuredResults;
		UE_InternalMeasuredResults_t	 ue_InternalMeasuredResults;
		UE_Positioning_MeasuredResults_t	 ue_positioning_MeasuredResults;
		NULL_t	 spare;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasuredResults_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_MeasuredResults;

#ifdef __cplusplus
}
#endif

#endif	/* _MeasuredResults_H_ */
#include <asn_internal.h>
