/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_DL_CommonInformation_r5_H_
#define	_DL_CommonInformation_r5_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include "DefaultDPCH-OffsetValueFDD.h"
#include "TX-DiversityMode.h"
#include <constr_SEQUENCE.h>
#include "DefaultDPCH-OffsetValueTDD.h"
#include <NULL.h>
#include <BOOLEAN.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum DL_CommonInformation_r5__modeSpecificInfo_PR {
	DL_CommonInformation_r5__modeSpecificInfo_PR_NOTHING,	/* No components present */
	DL_CommonInformation_r5__modeSpecificInfo_PR_fdd,
	DL_CommonInformation_r5__modeSpecificInfo_PR_tdd
} DL_CommonInformation_r5__modeSpecificInfo_PR;
typedef enum DL_CommonInformation_r5__modeSpecificInfo__tdd__tddOption_PR {
	DL_CommonInformation_r5__modeSpecificInfo__tdd__tddOption_PR_NOTHING,	/* No components present */
	DL_CommonInformation_r5__modeSpecificInfo__tdd__tddOption_PR_tdd384,
	DL_CommonInformation_r5__modeSpecificInfo__tdd__tddOption_PR_tdd128
} DL_CommonInformation_r5__modeSpecificInfo__tdd__tddOption_PR;
typedef enum DL_CommonInformation_r5__mac_hsResetIndicator {
	DL_CommonInformation_r5__mac_hsResetIndicator_true	= 0
} e_DL_CommonInformation_r5__mac_hsResetIndicator;

/* Forward declarations */
struct DL_DPCH_InfoCommon_r4;
struct DPCH_CompressedModeInfo;
struct SSDT_Information_r4;

/* DL-CommonInformation-r5 */
typedef struct DL_CommonInformation_r5 {
	struct DL_DPCH_InfoCommon_r4	*dl_DPCH_InfoCommon	/* OPTIONAL */;
	struct DL_CommonInformation_r5__modeSpecificInfo {
		DL_CommonInformation_r5__modeSpecificInfo_PR present;
		union DL_CommonInformation_r5__modeSpecificInfo_u {
			struct DL_CommonInformation_r5__modeSpecificInfo__fdd {
				DefaultDPCH_OffsetValueFDD_t	*defaultDPCH_OffsetValue	/* OPTIONAL */;
				struct DPCH_CompressedModeInfo	*dpch_CompressedModeInfo	/* OPTIONAL */;
				TX_DiversityMode_t	*tx_DiversityMode	/* OPTIONAL */;
				struct SSDT_Information_r4	*dummy	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fdd;
			struct DL_CommonInformation_r5__modeSpecificInfo__tdd {
				struct DL_CommonInformation_r5__modeSpecificInfo__tdd__tddOption {
					DL_CommonInformation_r5__modeSpecificInfo__tdd__tddOption_PR present;
					union DL_CommonInformation_r5__modeSpecificInfo__tdd__tddOption_u {
						NULL_t	 tdd384;
						struct DL_CommonInformation_r5__modeSpecificInfo__tdd__tddOption__tdd128 {
							BOOLEAN_t	 tstd_Indicator;
							
							/* Context for parsing across buffer boundaries */
							asn_struct_ctx_t _asn_ctx;
						} tdd128;
					} choice;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} tddOption;
				DefaultDPCH_OffsetValueTDD_t	*defaultDPCH_OffsetValue	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} modeSpecificInfo;
	long	*mac_hsResetIndicator	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} DL_CommonInformation_r5_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_mac_hsResetIndicator_15;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_DL_CommonInformation_r5;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "DL-DPCH-InfoCommon-r4.h"
#include "DPCH-CompressedModeInfo.h"
#include "SSDT-Information-r4.h"

#endif	/* _DL_CommonInformation_r5_H_ */
#include <asn_internal.h>
