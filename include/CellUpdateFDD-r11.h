/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "PDU-definitions"
 * 	found in "../asn/PDU-definitions.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_CellUpdateFDD_r11_H_
#define	_CellUpdateFDD_r11_H_


#include <asn_application.h>

/* Including external dependencies */
#include "U-RNTI.h"
#include "STARTList.h"
#include <BOOLEAN.h>
#include "CellUpdateCause.h"
#include "Rb-timer-indicator.h"
#include "EstablishmentCause.h"
#include <NativeEnumerated.h>
#include "High-MobilityDetected.h"
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum CellUpdateFDD_r11__trafficVolumeIndicator {
	CellUpdateFDD_r11__trafficVolumeIndicator_true	= 0
} e_CellUpdateFDD_r11__trafficVolumeIndicator;
typedef enum CellUpdateFDD_r11__reconfigurationStatusIndicator {
	CellUpdateFDD_r11__reconfigurationStatusIndicator_true	= 0
} e_CellUpdateFDD_r11__reconfigurationStatusIndicator;
typedef enum CellUpdateFDD_r11__csCallType {
	CellUpdateFDD_r11__csCallType_speech	= 0,
	CellUpdateFDD_r11__csCallType_video	= 1,
	CellUpdateFDD_r11__csCallType_other	= 2,
	CellUpdateFDD_r11__csCallType_spare	= 3
} e_CellUpdateFDD_r11__csCallType;
typedef enum CellUpdateFDD_r11__hspdschReception_CellFach {
	CellUpdateFDD_r11__hspdschReception_CellFach_true	= 0
} e_CellUpdateFDD_r11__hspdschReception_CellFach;
typedef enum CellUpdateFDD_r11__capabilityChangeIndicator {
	CellUpdateFDD_r11__capabilityChangeIndicator_true	= 0
} e_CellUpdateFDD_r11__capabilityChangeIndicator;
typedef enum CellUpdateFDD_r11__supportOfCommonEDCH {
	CellUpdateFDD_r11__supportOfCommonEDCH_true	= 0
} e_CellUpdateFDD_r11__supportOfCommonEDCH;
typedef enum CellUpdateFDD_r11__supportOfHS_DSCHDRXOperation {
	CellUpdateFDD_r11__supportOfHS_DSCHDRXOperation_true	= 0
} e_CellUpdateFDD_r11__supportOfHS_DSCHDRXOperation;
typedef enum CellUpdateFDD_r11__supportOfMACiis {
	CellUpdateFDD_r11__supportOfMACiis_true	= 0
} e_CellUpdateFDD_r11__supportOfMACiis;
typedef enum CellUpdateFDD_r11__securityRevertStatusIndicator {
	CellUpdateFDD_r11__securityRevertStatusIndicator_revertedBack	= 0,
	CellUpdateFDD_r11__securityRevertStatusIndicator_normalOperation	= 1
} e_CellUpdateFDD_r11__securityRevertStatusIndicator;
typedef enum CellUpdateFDD_r11__spare4 {
	CellUpdateFDD_r11__spare4_true	= 0
} e_CellUpdateFDD_r11__spare4;
typedef enum CellUpdateFDD_r11__spare3 {
	CellUpdateFDD_r11__spare3_true	= 0
} e_CellUpdateFDD_r11__spare3;
typedef enum CellUpdateFDD_r11__spare2 {
	CellUpdateFDD_r11__spare2_true	= 0
} e_CellUpdateFDD_r11__spare2;
typedef enum CellUpdateFDD_r11__spare1 {
	CellUpdateFDD_r11__spare1_true	= 0
} e_CellUpdateFDD_r11__spare1;
typedef enum CellUpdateFDD_r11__loggedMeasAvailable {
	CellUpdateFDD_r11__loggedMeasAvailable_true	= 0
} e_CellUpdateFDD_r11__loggedMeasAvailable;
typedef enum CellUpdateFDD_r11__loggedANRResultsAvailable {
	CellUpdateFDD_r11__loggedANRResultsAvailable_true	= 0
} e_CellUpdateFDD_r11__loggedANRResultsAvailable;

/* Forward declarations */
struct FailureCauseWithProtErrTrId;
struct MeasuredResultsOnRACHFDD_r11;

/* CellUpdateFDD-r11 */
typedef struct CellUpdateFDD_r11 {
	U_RNTI_t	 u_RNTI;
	STARTList_t	 startList;
	BOOLEAN_t	 am_RLC_ErrorIndicationRb2_3or4;
	BOOLEAN_t	 am_RLC_ErrorIndicationRb5orAbove;
	CellUpdateCause_t	 cellUpdateCause;
	struct FailureCauseWithProtErrTrId	*failureCause	/* OPTIONAL */;
	Rb_timer_indicator_t	 rb_timer_indicator;
	EstablishmentCause_t	*establishmentCause	/* OPTIONAL */;
	long	*trafficVolumeIndicator	/* OPTIONAL */;
	long	*reconfigurationStatusIndicator	/* OPTIONAL */;
	long	*csCallType	/* OPTIONAL */;
	long	*hspdschReception_CellFach	/* OPTIONAL */;
	High_MobilityDetected_t	*ueMobilityStateIndicator	/* OPTIONAL */;
	long	*capabilityChangeIndicator	/* OPTIONAL */;
	long	*supportOfCommonEDCH	/* OPTIONAL */;
	long	*supportOfHS_DSCHDRXOperation	/* OPTIONAL */;
	long	*supportOfMACiis	/* OPTIONAL */;
	long	*securityRevertStatusIndicator	/* OPTIONAL */;
	long	*spare4	/* OPTIONAL */;
	long	*spare3	/* OPTIONAL */;
	long	*spare2	/* OPTIONAL */;
	long	*spare1	/* OPTIONAL */;
	struct MeasuredResultsOnRACHFDD_r11	*measuredResultsOnRACH	/* OPTIONAL */;
	long	*loggedMeasAvailable	/* OPTIONAL */;
	long	*loggedANRResultsAvailable	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} CellUpdateFDD_r11_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_trafficVolumeIndicator_10;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_reconfigurationStatusIndicator_12;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_csCallType_14;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_hspdschReception_CellFach_19;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_capabilityChangeIndicator_22;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportOfCommonEDCH_24;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportOfHS_DSCHDRXOperation_26;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportOfMACiis_28;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_securityRevertStatusIndicator_30;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_spare4_33;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_spare3_35;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_spare2_37;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_spare1_39;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_loggedMeasAvailable_42;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_loggedANRResultsAvailable_44;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_CellUpdateFDD_r11;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "FailureCauseWithProtErrTrId.h"
#include "MeasuredResultsOnRACHFDD-r11.h"

#endif	/* _CellUpdateFDD_r11_H_ */
#include <asn_internal.h>
