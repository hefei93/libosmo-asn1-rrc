/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_EUTRA_MeasurementForCELLFACH_H_
#define	_EUTRA_MeasurementForCELLFACH_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <NativeInteger.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum EUTRA_MeasurementForCELLFACH__reportCriteria {
	EUTRA_MeasurementForCELLFACH__reportCriteria_event_triggeredreporting	= 0,
	EUTRA_MeasurementForCELLFACH__reportCriteria_periodicalReporting	= 1
} e_EUTRA_MeasurementForCELLFACH__reportCriteria;
typedef enum EUTRA_MeasurementForCELLFACH__measurementQuantity {
	EUTRA_MeasurementForCELLFACH__measurementQuantity_rsrp	= 0,
	EUTRA_MeasurementForCELLFACH__measurementQuantity_rsrq	= 1
} e_EUTRA_MeasurementForCELLFACH__measurementQuantity;

/* Forward declarations */
struct EARFCNRange;

/* EUTRA-MeasurementForCELLFACH */
typedef struct EUTRA_MeasurementForCELLFACH {
	struct EUTRA_MeasurementForCELLFACH__eutraFrequenciesForMeasurement {
		A_SEQUENCE_OF(struct EARFCNRange) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} eutraFrequenciesForMeasurement;
	long	 reportCriteria;
	long	 measurementQuantity;
	long	 reportingThreshold;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} EUTRA_MeasurementForCELLFACH_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_reportCriteria_4;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_measurementQuantity_7;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_EUTRA_MeasurementForCELLFACH;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "EARFCNRange.h"

#endif	/* _EUTRA_MeasurementForCELLFACH_H_ */
#include <asn_internal.h>
