/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_UE_RadioAccessCapability_va40ext_IEs_H_
#define	_UE_RadioAccessCapability_va40ext_IEs_H_


#include <asn_application.h>

/* Including external dependencies */
#include "PhysicalChannelCapability-va40ext.h"
#include "RLC-Capability-va40ext.h"
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum UE_RadioAccessCapability_va40ext_IEs__supportOfMUMIMO {
	UE_RadioAccessCapability_va40ext_IEs__supportOfMUMIMO_uplink	= 0,
	UE_RadioAccessCapability_va40ext_IEs__supportOfMUMIMO_uplink_and_downlink	= 1
} e_UE_RadioAccessCapability_va40ext_IEs__supportOfMUMIMO;
typedef enum UE_RadioAccessCapability_va40ext_IEs__supportForDualCellMimoInDifferentBands {
	UE_RadioAccessCapability_va40ext_IEs__supportForDualCellMimoInDifferentBands_true	= 0
} e_UE_RadioAccessCapability_va40ext_IEs__supportForDualCellMimoInDifferentBands;
typedef enum UE_RadioAccessCapability_va40ext_IEs__supportOfUTRANANR {
	UE_RadioAccessCapability_va40ext_IEs__supportOfUTRANANR_true	= 0
} e_UE_RadioAccessCapability_va40ext_IEs__supportOfUTRANANR;

/* Forward declarations */
struct UE_RadioAccessCapabBandCombList_va40ext;
struct MeasurementCapability_va40ext;
struct UE_BasedNetworkPerformanceMeasurementsParameters;
struct UE_RadioAccessCapabBandFDDList4;

/* UE-RadioAccessCapability-va40ext-IEs */
typedef struct UE_RadioAccessCapability_va40ext_IEs {
	struct UE_RadioAccessCapabBandCombList_va40ext	*ue_RadioAccessCapabBandCombList_va40ext	/* OPTIONAL */;
	PhysicalChannelCapability_va40ext_t	 physicalChannelCapability;
	RLC_Capability_va40ext_t	 rlc_Capability;
	struct MeasurementCapability_va40ext	*measurementCapability	/* OPTIONAL */;
	long	*supportOfMUMIMO	/* OPTIONAL */;
	long	*supportForDualCellMimoInDifferentBands	/* OPTIONAL */;
	struct UE_BasedNetworkPerformanceMeasurementsParameters	*ue_BasedNetworkPerformanceMeasurementsParameters	/* OPTIONAL */;
	long	*supportOfUTRANANR	/* OPTIONAL */;
	struct UE_RadioAccessCapabBandFDDList4	*ue_RadioAccessCapabBandFDDList4	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} UE_RadioAccessCapability_va40ext_IEs_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_supportOfMUMIMO_6;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportForDualCellMimoInDifferentBands_9;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportOfUTRANANR_12;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_UE_RadioAccessCapability_va40ext_IEs;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "UE-RadioAccessCapabBandCombList-va40ext.h"
#include "MeasurementCapability-va40ext.h"
#include "UE-BasedNetworkPerformanceMeasurementsParameters.h"
#include "UE-RadioAccessCapabBandFDDList4.h"

#endif	/* _UE_RadioAccessCapability_va40ext_IEs_H_ */
#include <asn_internal.h>
