/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_MeasurementCapability_vb50ext_H_
#define	_MeasurementCapability_vb50ext_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasurementCapability_vb50ext__interFrequencyMeasOnConfigCarriersWithoutCompMode {
	MeasurementCapability_vb50ext__interFrequencyMeasOnConfigCarriersWithoutCompMode_true	= 0
} e_MeasurementCapability_vb50ext__interFrequencyMeasOnConfigCarriersWithoutCompMode;
typedef enum MeasurementCapability_vb50ext__cellsExcludedFromDetectedSetMeasurements {
	MeasurementCapability_vb50ext__cellsExcludedFromDetectedSetMeasurements_true	= 0
} e_MeasurementCapability_vb50ext__cellsExcludedFromDetectedSetMeasurements;

/* MeasurementCapability-vb50ext */
typedef struct MeasurementCapability_vb50ext {
	long	*interFrequencyMeasOnConfigCarriersWithoutCompMode	/* OPTIONAL */;
	long	*cellsExcludedFromDetectedSetMeasurements	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasurementCapability_vb50ext_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_interFrequencyMeasOnConfigCarriersWithoutCompMode_2;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_cellsExcludedFromDetectedSetMeasurements_4;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MeasurementCapability_vb50ext;

#ifdef __cplusplus
}
#endif

#endif	/* _MeasurementCapability_vb50ext_H_ */
#include <asn_internal.h>
