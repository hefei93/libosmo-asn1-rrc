/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_MIMO_Parameters_r8_H_
#define	_MIMO_Parameters_r8_H_


#include <asn_application.h>

/* Including external dependencies */
#include "MIMO-Operation.h"
#include "MIMO-N-M-Ratio.h"
#include <constr_SEQUENCE.h>
#include <NULL.h>
#include <NativeEnumerated.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MIMO_Parameters_r8__modeSpecificInfo_PR {
	MIMO_Parameters_r8__modeSpecificInfo_PR_NOTHING,	/* No components present */
	MIMO_Parameters_r8__modeSpecificInfo_PR_fdd,
	MIMO_Parameters_r8__modeSpecificInfo_PR_tdd
} MIMO_Parameters_r8__modeSpecificInfo_PR;
typedef enum MIMO_Parameters_r8__modeSpecificInfo__tdd_PR {
	MIMO_Parameters_r8__modeSpecificInfo__tdd_PR_NOTHING,	/* No components present */
	MIMO_Parameters_r8__modeSpecificInfo__tdd_PR_tdd128,
	MIMO_Parameters_r8__modeSpecificInfo__tdd_PR_tdd384_tdd768
} MIMO_Parameters_r8__modeSpecificInfo__tdd_PR;
typedef enum MIMO_Parameters_r8__modeSpecificInfo__tdd__tdd128__mimoSFModeForHSPDSCHDualStream {
	MIMO_Parameters_r8__modeSpecificInfo__tdd__tdd128__mimoSFModeForHSPDSCHDualStream_sf1	= 0,
	MIMO_Parameters_r8__modeSpecificInfo__tdd__tdd128__mimoSFModeForHSPDSCHDualStream_sf1sf16	= 1
} e_MIMO_Parameters_r8__modeSpecificInfo__tdd__tdd128__mimoSFModeForHSPDSCHDualStream;

/* Forward declarations */
struct MIMO_PilotConfiguration;
struct HS_SICH_ReferenceSignalInfoList;

/* MIMO-Parameters-r8 */
typedef struct MIMO_Parameters_r8 {
	MIMO_Operation_t	 mimoOperation;
	struct MIMO_Parameters_r8__modeSpecificInfo {
		MIMO_Parameters_r8__modeSpecificInfo_PR present;
		union MIMO_Parameters_r8__modeSpecificInfo_u {
			struct MIMO_Parameters_r8__modeSpecificInfo__fdd {
				MIMO_N_M_Ratio_t	*mimoN_M_Ratio	/* OPTIONAL */;
				struct MIMO_PilotConfiguration	*mimoPilotConfiguration	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fdd;
			struct MIMO_Parameters_r8__modeSpecificInfo__tdd {
				MIMO_Parameters_r8__modeSpecificInfo__tdd_PR present;
				union MIMO_Parameters_r8__modeSpecificInfo__tdd_u {
					struct MIMO_Parameters_r8__modeSpecificInfo__tdd__tdd128 {
						long	 mimoSFModeForHSPDSCHDualStream;
						struct HS_SICH_ReferenceSignalInfoList	*hs_sich_ReferenceSignalInfoList	/* OPTIONAL */;
						
						/* Context for parsing across buffer boundaries */
						asn_struct_ctx_t _asn_ctx;
					} tdd128;
					NULL_t	 tdd384_tdd768;
				} choice;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} modeSpecificInfo;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MIMO_Parameters_r8_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_mimoSFModeForHSPDSCHDualStream_9;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MIMO_Parameters_r8;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "MIMO-PilotConfiguration.h"
#include "HS-SICH-ReferenceSignalInfoList.h"

#endif	/* _MIMO_Parameters_r8_H_ */
#include <asn_internal.h>
