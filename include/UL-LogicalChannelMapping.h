/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_UL_LogicalChannelMapping_H_
#define	_UL_LogicalChannelMapping_H_


#include <asn_application.h>

/* Including external dependencies */
#include "UL-TransportChannelType.h"
#include "LogicalChannelIdentity.h"
#include "MAC-LogicalChannelPriority.h"
#include <NULL.h>
#include "RLC-SizeExplicitList.h"
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum UL_LogicalChannelMapping__rlc_SizeList_PR {
	UL_LogicalChannelMapping__rlc_SizeList_PR_NOTHING,	/* No components present */
	UL_LogicalChannelMapping__rlc_SizeList_PR_allSizes,
	UL_LogicalChannelMapping__rlc_SizeList_PR_configured,
	UL_LogicalChannelMapping__rlc_SizeList_PR_explicitList
} UL_LogicalChannelMapping__rlc_SizeList_PR;

/* UL-LogicalChannelMapping */
typedef struct UL_LogicalChannelMapping {
	UL_TransportChannelType_t	 ul_TransportChannelType;
	LogicalChannelIdentity_t	*logicalChannelIdentity	/* OPTIONAL */;
	struct UL_LogicalChannelMapping__rlc_SizeList {
		UL_LogicalChannelMapping__rlc_SizeList_PR present;
		union UL_LogicalChannelMapping__rlc_SizeList_u {
			NULL_t	 allSizes;
			NULL_t	 configured;
			RLC_SizeExplicitList_t	 explicitList;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} rlc_SizeList;
	MAC_LogicalChannelPriority_t	 mac_LogicalChannelPriority;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} UL_LogicalChannelMapping_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_UL_LogicalChannelMapping;

#ifdef __cplusplus
}
#endif

#endif	/* _UL_LogicalChannelMapping_H_ */
#include <asn_internal.h>
