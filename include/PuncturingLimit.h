/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_PuncturingLimit_H_
#define	_PuncturingLimit_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum PuncturingLimit {
	PuncturingLimit_pl0_40	= 0,
	PuncturingLimit_pl0_44	= 1,
	PuncturingLimit_pl0_48	= 2,
	PuncturingLimit_pl0_52	= 3,
	PuncturingLimit_pl0_56	= 4,
	PuncturingLimit_pl0_60	= 5,
	PuncturingLimit_pl0_64	= 6,
	PuncturingLimit_pl0_68	= 7,
	PuncturingLimit_pl0_72	= 8,
	PuncturingLimit_pl0_76	= 9,
	PuncturingLimit_pl0_80	= 10,
	PuncturingLimit_pl0_84	= 11,
	PuncturingLimit_pl0_88	= 12,
	PuncturingLimit_pl0_92	= 13,
	PuncturingLimit_pl0_96	= 14,
	PuncturingLimit_pl1	= 15
} e_PuncturingLimit;

/* PuncturingLimit */
typedef long	 PuncturingLimit_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_PuncturingLimit;
asn_struct_free_f PuncturingLimit_free;
asn_struct_print_f PuncturingLimit_print;
asn_constr_check_f PuncturingLimit_constraint;
ber_type_decoder_f PuncturingLimit_decode_ber;
der_type_encoder_f PuncturingLimit_encode_der;
xer_type_decoder_f PuncturingLimit_decode_xer;
xer_type_encoder_f PuncturingLimit_encode_xer;
per_type_decoder_f PuncturingLimit_decode_uper;
per_type_encoder_f PuncturingLimit_encode_uper;

#ifdef __cplusplus
}
#endif

#endif	/* _PuncturingLimit_H_ */
#include <asn_internal.h>
