/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_CommonEDCHSystemInfoParamConcurrentTTI_H_
#define	_CommonEDCHSystemInfoParamConcurrentTTI_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include "E-DPCCH-DPCCH-PowerOffset.h"
#include "E-DPDCH-Info-r8.h"
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation {
	CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation_tti8	= 0,
	CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation_tti12	= 1,
	CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation_tti16	= 2,
	CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation_tti20	= 3,
	CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation_tti24	= 4,
	CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation_tti32	= 5,
	CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation_tti40	= 6,
	CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation_tti80	= 7
} e_CommonEDCHSystemInfoParamConcurrentTTI__max_CCCH_ResourceAllocation;
typedef enum CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset {
	CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset_tti0	= 0,
	CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset_tti4	= 1,
	CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset_tti8	= 2,
	CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset_tti16	= 3,
	CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset_tti24	= 4,
	CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset_tti40	= 5,
	CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset_tti80	= 6,
	CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset_infinity	= 7
} e_CommonEDCHSystemInfoParamConcurrentTTI__e_dch_TransmitContinuationOffset;

/* Forward declarations */
struct Common_E_DCH_MAC_d_Flow_Info_List_ConcurrentTTI;
struct E_AGCH_Information;
struct UL_DPCHpowerControlInfoConcurrentTTI;
struct Measurement_Feedback_Info_ConcurrentTTI;

/* CommonEDCHSystemInfoParamConcurrentTTI */
typedef struct CommonEDCHSystemInfoParamConcurrentTTI {
	struct Common_E_DCH_MAC_d_Flow_Info_List_ConcurrentTTI	*common_E_DCH_MAC_d_Flow_Info_List_ConcurrentTTI	/* OPTIONAL */;
	long	*initialServingGrantValue	/* OPTIONAL */;
	struct E_AGCH_Information	*e_agch_Information	/* OPTIONAL */;
	struct UL_DPCHpowerControlInfoConcurrentTTI	*ul_DPCHpowerControlInfoConcurrentTTI	/* OPTIONAL */;
	E_DPCCH_DPCCH_PowerOffset_t	*e_DPCCH_DPCCH_PowerOffset	/* OPTIONAL */;
	E_DPDCH_Info_r8_t	 e_dpdch_Info;
	long	*additional_E_DCH_TransmitBackoff	/* OPTIONAL */;
	long	*max_CCCH_ResourceAllocation	/* OPTIONAL */;
	long	*max_PeriodForCollisionResolution	/* OPTIONAL */;
	long	*e_dch_TransmitContinuationOffset	/* OPTIONAL */;
	struct Measurement_Feedback_Info_ConcurrentTTI	*measurement_Feedback_Info_ConcurrentTTI	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} CommonEDCHSystemInfoParamConcurrentTTI_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_max_CCCH_ResourceAllocation_9;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_e_dch_TransmitContinuationOffset_19;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_CommonEDCHSystemInfoParamConcurrentTTI;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "Common-E-DCH-MAC-d-Flow-Info-List-ConcurrentTTI.h"
#include "E-AGCH-Information.h"
#include "UL-DPCHpowerControlInfoConcurrentTTI.h"
#include "Measurement-Feedback-Info-ConcurrentTTI.h"

#endif	/* _CommonEDCHSystemInfoParamConcurrentTTI_H_ */
#include <asn_internal.h>
