/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "../asn/InformationElements.asn"
 * 	`asn1c -fcompound-names -fnative-types`
 */

#ifndef	_FailureCauseWithProtErr_H_
#define	_FailureCauseWithProtErr_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NULL.h>
#include "TGPSI.h"
#include "ProtocolErrorInformation.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum FailureCauseWithProtErr_PR {
	FailureCauseWithProtErr_PR_NOTHING,	/* No components present */
	FailureCauseWithProtErr_PR_configurationUnsupported,
	FailureCauseWithProtErr_PR_physicalChannelFailure,
	FailureCauseWithProtErr_PR_incompatibleSimultaneousReconfiguration,
	FailureCauseWithProtErr_PR_compressedModeRuntimeError,
	FailureCauseWithProtErr_PR_protocolError,
	FailureCauseWithProtErr_PR_cellUpdateOccurred,
	FailureCauseWithProtErr_PR_invalidConfiguration,
	FailureCauseWithProtErr_PR_configurationIncomplete,
	FailureCauseWithProtErr_PR_unsupportedMeasurement,
	FailureCauseWithProtErr_PR_mbmsSessionAlreadyReceivedCorrectly,
	FailureCauseWithProtErr_PR_lowerPriorityMBMSService,
	FailureCauseWithProtErr_PR_spare5,
	FailureCauseWithProtErr_PR_spare4,
	FailureCauseWithProtErr_PR_spare3,
	FailureCauseWithProtErr_PR_spare2,
	FailureCauseWithProtErr_PR_spare1
} FailureCauseWithProtErr_PR;

/* FailureCauseWithProtErr */
typedef struct FailureCauseWithProtErr {
	FailureCauseWithProtErr_PR present;
	union FailureCauseWithProtErr_u {
		NULL_t	 configurationUnsupported;
		NULL_t	 physicalChannelFailure;
		NULL_t	 incompatibleSimultaneousReconfiguration;
		TGPSI_t	 compressedModeRuntimeError;
		ProtocolErrorInformation_t	 protocolError;
		NULL_t	 cellUpdateOccurred;
		NULL_t	 invalidConfiguration;
		NULL_t	 configurationIncomplete;
		NULL_t	 unsupportedMeasurement;
		NULL_t	 mbmsSessionAlreadyReceivedCorrectly;
		NULL_t	 lowerPriorityMBMSService;
		NULL_t	 spare5;
		NULL_t	 spare4;
		NULL_t	 spare3;
		NULL_t	 spare2;
		NULL_t	 spare1;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} FailureCauseWithProtErr_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_FailureCauseWithProtErr;

#ifdef __cplusplus
}
#endif

#endif	/* _FailureCauseWithProtErr_H_ */
#include <asn_internal.h>
